import giveawayhandler as gh
import json
from os.path import exists as file_exists
import time


while True:
    # Load users
    start_time = time.perf_counter()
    with open('saved_SIDs.json', 'r') as file:
        SIDs = json.load(file)
    if file_exists('saved_users.json'):
        with open('saved_users.json', 'r') as file:
            user_dicts = json.load(file)
        old_users = [i.get('username') for i in user_dicts]
        new_users = [i for i in SIDs if i not in old_users]
        users = [gh.User.from_dict(i) for i in user_dicts]
        new_users = [gh.User(i, SIDs.get(i)) for i in new_users]
        users.extend(new_users)
    else:
        users = [gh.User(i, SIDs.get(i)) for i in SIDs]

    # Sign users up to everything
    try:
        for user in users:
            print(f'{user.username}')
            user.sign_up_to_all()
    except Exception as err:
        print(f"{type(err).__name__} was raised: {err}")
        user_dicts = [i.to_dict() for i in users]
        with open('saved_users.json', 'w') as file:
            json.dump(user_dicts, file)
        time.sleep(60)
    except KeyboardInterrupt:
        user_dicts = [i.to_dict() for i in users]
        with open('saved_users.json', 'w') as file:
            json.dump(user_dicts, file)
        raise

    # Save users
    print(f'Saving userdata and starting the next signup cycle')
    user_dicts = [i.to_dict() for i in users]
    with open('saved_users.json', 'w') as file:
        json.dump(user_dicts, file)
    end_time = time.perf_counter()
    seconds_ran = end_time - start_time
    print(f'This cycle took {seconds_ran} seconds ({seconds_ran/60} minutes or {seconds_ran/3600} hours)')
    time.sleep(60)